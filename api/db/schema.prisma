// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int               @id @default(autoincrement())
  identifier          String            @unique
  realName            String
  nickname            String
  phoneNumber         String
  birthday            DateTime
  email               String            @default("")
  interests           String[]
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  userSeasonGroup     UserSeasonGroup[]
}

model Department {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  group     Group[]
}

model Group {
  id           String        @id @default(cuid())
  department   Department    @relation(fields: [departmentId], references: [id])
  name         String
  slug         String        @unique
  createdAt    DateTime      @default(now())
  departmentId String
  seasonGroup  SeasonGroup[]
}

model Season {
  id          String        @id @default(cuid())
  name        String
  startsAt    DateTime
  endsAt      DateTime
  seasonGroup SeasonGroup[]
}

model SeasonGroup {
  id              String            @id @default(cuid())
  season          Season            @relation(fields: [seasonId], references: [id])
  group           Group             @relation(fields: [groupId], references: [id])
  seasonId        String
  groupId         String
  createdAt       DateTime          @default(now())
  userSeasonGroup UserSeasonGroup[]
}

model UserSeasonGroup {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  seasonGroup   SeasonGroup @relation(fields: [seasonGroupId], references: [id])
  userId        Int
  seasonGroupId String
  createdAt     DateTime    @default(now())
}
